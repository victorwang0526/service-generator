<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${pkg}.dao.CarrotDao" >
    <resultMap id="carrotResultMapper" type="Carrot" >
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="price" property="price"/>
        <result column="weight" property="weight"/>

        <result column="created_at" property="createdAt"/>
        <result column="last_modified_at" property="lastModifiedAt"/>
        <result column="rvn" property="rvn"/>
    </resultMap>
    <sql id="allFields" >
        id,
        name,
        price,
        weight,
        created_at,
        last_modified_at,
        rvn
    </sql>

    <select id="getAll" resultMap="carrotResultMapper">
        SELECT
        <include refid="allFields" />
        FROM carrot
        ORDER BY created_at
    </select>

    <select id="getCount" parameterType="java.util.HashMap" resultType="int">
        SELECT COUNT(*) as cnt
        FROM carrot
        WHERE 1=1
        <include refid="findCarrotsParams"/>
    </select>

    <select id="get" resultMap="carrotResultMapper" parameterType="String" >
        select
        <include refid="allFields" />
        from carrot
        where id = ${r"#{id}"}
    </select>

    <insert id="insert" parameterType="Carrot" >
        insert into carrot (
        id,
        name,
        price,
        weight,
        created_at,
        last_modified_at,
        rvn)
        values (
        ${r"#{id}"},
        ${r"#{name}"},
        ${r"#{price}"},
        ${r"#{weight}"},
        ${r"#{createdAt}"},
        ${r"#{lastModifiedAt}"},
        ${r"#{rvn}"}
        )
    </insert>

    <update id="update" parameterType="Carrot" >
        update carrot
        SET name = ${r"#{name}"},
        price = ${r"#{price}"},
        weight = ${r"#{weight}"},
        created_at = ${r"#{createdAt}"},
        last_modified_at = ${r"#{lastModifiedAt}"},
        rvn = ${r"#{rvn}"}
        where id = ${r"#{id}"}
    </update>

    <sql id="findCarrotsParams">
        <if test="name != null">
            AND name = ${r"#{name}"}
        </if>
    </sql>

    <select id="getList" parameterType="java.util.HashMap" resultMap="carrotResultMapper">
        SELECT
        <include refid="allFields" />
        FROM carrot
        WHERE 1=1
        <include refid="findCarrotsParams"/>
        <choose>
            <when test="orderBy != null">
                ORDER BY ${r"${orderBy}"}
            </when>
            <otherwise>
                ORDER BY created_at
            </otherwise>
        </choose>
        <if test="limit != null and offset != null">
            LIMIT ${r"#{limit}"} OFFSET ${r"#{offset}"}
        </if>
    </select>

    <delete id="purge">
        DELETE FROM carrot
    </delete>

    <delete id="delete" parameterType="String">
        DELETE FROM carrot
        WHERE id = ${r"#{id}"}
    </delete>
</mapper>