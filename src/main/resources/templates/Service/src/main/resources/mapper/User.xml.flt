<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${pkg}.dao.UserDao" >
    <resultMap id="userResultMapper" type="${pkg}.model.User" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="login_name" property="loginName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="last_modified_at" property="lastModifiedAt" jdbcType="TIMESTAMP" />
        <result column="last_login_at" property="lastLoginAt" jdbcType="TIMESTAMP" />
        <result column="last_login_ip" property="lastLoginIp" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="allFields" >
        id,
        login_name,
        password,
        created_at,
        last_modified_at,
        last_login_at,
        last_login_ip
    </sql>

    <select id="getAll" resultMap="userResultMapper">
        SELECT
        <include refid="allFields" />
        FROM t_user
        ORDER BY created_at
    </select>

    <select id="getCount" parameterType="java.util.HashMap" resultType="int">
        SELECT COUNT(*) as cnt
        FROM t_user
        WHERE 1=1
        <include refid="findUsersParams"/>
    </select>

    <select id="get" resultMap="userResultMapper" parameterType="String" >
        SELECT
        <include refid="allFields" />
        FROM t_user
        WHERE id = ${r"#{id}"}
    </select>

    <insert id="insert" parameterType="User" >
        INSERT INTO t_user (
        id,
        login_name,
        password,
        created_at,
        last_modified_at,
        last_login_at,
        last_login_ip
        )
        VALUES (
        ${r"#{id,jdbcType=VARCHAR}"},
        ${r"#{loginName,jdbcType=VARCHAR}"},
        ${r"#{password,jdbcType=VARCHAR}"},
        ${r"#{createdAt,jdbcType=TIMESTAMP}"},
        ${r"#{lastModifiedAt,jdbcType=TIMESTAMP}"},
        ${r"#{lastLoginAt,jdbcType=TIMESTAMP}"},
        ${r"#{lastLoginIp,jdbcType=TIMESTAMP}"}
        )
    </insert>

    <update id="update" parameterType="User" >
        UPDATE t_user
        SET 
        login_name = ${r"#{loginName,jdbcType=VARCHAR}"},
        password = ${r"#{password,jdbcType=VARCHAR}"},
        created_at = ${r"#{createdAt,jdbcType=TIMESTAMP}"},
        last_modified_at = getdate(),
        last_login_at = ${r"#{lastLoginAt,jdbcType=TIMESTAMP}"},
        last_login_ip = ${r"#{lastLoginIp,jdbcType=TIMESTAMP}"},
        WHERE id = ${r"#{id,jdbcType=VARCHAR}"}
    </update>

    <sql id="findUsersParams">
    </sql>
    <select id="getList" parameterType="java.util.HashMap" resultMap="userResultMapper">
        SELECT
        <include refid="allFields" />
        FROM t_user
        WHERE 1=1
        <include refid="findUsersParams"/>
    </select>

    <delete id="purge">
        DELETE FROM t_user
    </delete>

    <delete id="delete" parameterType="String">
        DELETE FROM t_user
        WHERE id = ${r"#{id}"}
    </delete>

    <select id="getUserLogin" parameterType="java.util.HashMap" resultMap="userResultMapper">
        select <include refid="allFields"/>
        from t_user
        where login_name = ${r"#{username}"}
    </select>
</mapper>