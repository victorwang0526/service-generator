/*
 * Victor Wang
 */

package ${pkg}.sharedObject;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import ${pkg}.model.base.BaseEntity;

import java.util.List;

/**
 * <p>
 * A paginated API result that contains a list of results, and pagingContext. Contains the results
 * for an API call that returns a page of results.
 * </p>
 * The JSON generated for this object is:
 * <pre>
 * { "elements":[&lt;list of result items&gt;],
 * "paging":{ "page": &lt;page index of returned page&gt;,
 *            "size":&lt;page size&gt;,
 *            "total": &lt;the total pages of items available (not set by all APIs)&gt;}
 * }
 * </pre>
 */
@JsonIgnoreProperties("toStringExcludeFieldNames")
public class PaginatedAPIResult<T>
		extends BaseEntity
{
	private List<T> elements;
	private PaginationContext paging = new PaginationContext();

	private PaginatedAPIResult()
	{

	}

	public PaginatedAPIResult(List<T> pageElements, int page, int size)
    {
        setElements(pageElements);
        setPage(page);
        setSize(size);
    }

    public PaginatedAPIResult(List<T> pageElements, int page, int size, int total)
    {
        setElements(pageElements);
        setPage(page);
        setSize(size);
        setTotal(total);
    }

    /**
     * The list of results for the requested page
     */
    public List<T> getElements()
    {
        return elements;
    }

    /**
     * The list of results for the requested page
     */
    public void setElements(List<T> pageElements)
    {
        this.elements = pageElements;
    }

    /**
     * The pagination context, contains the page size, count...etc.
     */
    @JsonProperty(value = "paging")
    public PaginationContext getPaging()
    {
        return paging;
    }

    /**
     * The page size.
     */
    @JsonIgnore
    public void setSize(int size)
    {
        this.paging.setSize(size);
    }

    /**
     * The page of the result page. 1 based
     */
    @JsonIgnore
    public void setPage(int page)
    {
        this.paging.setPage(page);
    }


    /**
     * The total number of available records available from the API from which this page was obtained.
     * May not be set by all APIs
     */
    @JsonIgnore
    public void setTotal(Integer total)
    {
        this.paging.setTotal(total);
    }
}
