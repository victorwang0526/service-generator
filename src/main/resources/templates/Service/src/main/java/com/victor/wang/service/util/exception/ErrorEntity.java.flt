/*
 * Victor Wang. All Rights Reserved.
 */

package ${pkg}.util.exception;

import ${pkg}.exception.base.ApplicationException;

import java.util.Arrays;
import java.util.List;

/**
 * An entity used to represent an application exception for end user viewing.
 */
public class ErrorEntity
{
	private String errorCode;
	protected String errorMessage;
	protected List<String> messageVars;
	protected int numericErrorCode = ApplicationException.DEFAULT_NUMERIC_ERROR_CODE;
	private String originatingService = "UNKNOWN";
	private String intent;

	/**
	 * This is intended for internal use only
	 */
	public ErrorEntity()
	{
		this.originatingService = "carrot";
	}

	/**
	 * Construct an Error Entity from an ApplicationException instance
	 *
	 * @param applicationException The exception from which the ErrorEntity should be built
	 */
	public ErrorEntity(ApplicationException applicationException)
	{
		this.errorCode = applicationException.getErrorCode();
		this.numericErrorCode = applicationException.getNumericErrorCode();
		this.errorMessage = applicationException.getMessage();
		this.messageVars = applicationException.getMessageVars();
		this.originatingService = applicationException.getOriginatingService();
	}

	/**
	 * Construct an Error Entity with errorCode
	 *
	 * @param errCode The errorCode from which the ErrorEntity should be built
	 */
	public ErrorEntity(String errCode)
	{
		this();

		this.errorCode = errCode;
	}

	/**
	 * Constructs error entity with passed parameters initializing intent and originating service from configuration.
	 *
	 * @param errorCode        error alpha code
	 * @param numericErrorCode error numeric code
	 * @param errorMessage     error message (pre-formatted)
	 * @param messageVars      error message variables
	 */
	public ErrorEntity(String errorCode, int numericErrorCode, String errorMessage, String... messageVars)
	{
		this(errorCode);

		this.errorMessage = errorMessage;
		this.numericErrorCode = numericErrorCode;
		this.messageVars = messageVars.length == 0 ? null : Arrays.asList(messageVars);
	}

	/**
	 * The error code for this error i.e: ${pkg}.duplicate_display_name. This is intended to be uses by
	 * applications to map the error to an internationalized message within the app.
	 *
	 * @return The error code
	 */
	public String getErrorCode()
	{
		return errorCode;
	}

	/**
	 * The error code for this error i.e: ${pkg}.login.duplicate_display_name. This is intended to be uses by
	 * applications to map the error to an internationalized message within the app.
	 *
	 * @param newErrorCode The error code
	 */
	public void setErrorCode(String newErrorCode)
	{
		this.errorCode = newErrorCode;
	}

	/**
	 * The error message corresponding to the errorCode that was generated by the application. This message is not
	 * internationalized.
	 *
	 * @return The error message.
	 */
	public String getErrorMessage()
	{
		return errorMessage;
	}

	/**
	 * The error message corresponding to the errorCode that was generated by the application. This message is not
	 * internationalized.
	 *
	 * @param newErrorMessage The error message.
	 */
	public void setErrorMessage(String newErrorMessage)
	{
		this.errorMessage = newErrorMessage;
	}

	/**
	 * A list of substitution strings that were used to generate the error message. These message vars can be used
	 * by applications that are creating their own error message based on the code in an error entity.
	 *
	 * @return The list of message substitution strings.
	 */
	public List<String> getMessageVars()
	{
		return messageVars;
	}

	/**
	 * A list of substitution strings that were used to generate the error message. These message vars can be used
	 * by applications that are creating their own error message based on the code in an error entity.
	 *
	 * @param newMessageVars The list of message substitution strings.
	 */
	public void setMessageVars(List<String> newMessageVars)
	{
		this.messageVars = newMessageVars;
	}

	/**
	 * The unique numeric error code for this error. Intended to be used by users to give to CS
	 *
	 * @return The numeric error code
	 */
	public int getNumericErrorCode()
	{
		return numericErrorCode;
	}

	/**
	 * The unique numeric error code for this error. Intended to be used by users to give to CS
	 *
	 * @param newNumericErrorCode The new numeric error code
	 */
	public void setNumericErrorCode(int newNumericErrorCode)
	{
		this.numericErrorCode = newNumericErrorCode;
	}

	/**
	 * The name of the service that generated this error.
	 *
	 * @return The originating service
	 */
	public String getOriginatingService()
	{
		return originatingService;
	}

	/**
	 * The name of the service that generated this error.
	 *
	 * @param newOriginatingService The new originating service
	 */
	public void setOriginatingService(String newOriginatingService)
	{
		this.originatingService = newOriginatingService;
	}

	/**
	 * The environment or intent from which this error was generated. This is auto set, and generally doesn't need
	 * to be configured.
	 *
	 * @return The intent
	 */
	public String getIntent()
	{
		return intent;
	}

	/**
	 * The environment or intent from which this error was generated. This is auto set, and generally doesn't need
	 * to be configured.
	 *
	 * @param newIntent The new intent value
	 */
	public void setIntent(String newIntent)
	{
		this.intent = newIntent;
	}
}
